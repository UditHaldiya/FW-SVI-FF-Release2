export MN_CC:=Use MN settings
export BASE=$(CURDIR)/base
me:=$(PROJDIR)\$(lastword $(MAKEFILE_LIST))
include $(PROJDIR)/target/mak/makeconfig_common.mak
include $(PROJDIR)/base/mak/Makeenv.mak
include $(PROJDIR)/target/mak/std_settings.mak

#Add Softing flags
CFLAGS_PROJ += -Dexception_handler=default_exception_handler
ifneq ($(Hide),)
$(info CFLAGS_PROJ=$(CFLAGS_PROJ))
endif

ifeq ($(NOGEN),)
ifneq ($(filter REQIMPORT,$(MAKECMDGOALS)),)
FORCED_DEPENDENCY_LOCAL+=GenVFD
endif
endif

$(info MAKECMDGOALS=$(MAKECMDGOALS))
$(info *******************************)
$(info FORCED_DEPENDENCY_LOCAL=$(FORCED_DEPENDENCY_LOCAL))
$(info *******************************)

#REQIMPORT : GenVFD

#Do not change unless you know what you are doing;
#For now, we use default installation of FF tokenizer
export TokenizerDir:=..\FFTokenizer
export includepath:=$(TokenizerDir)\ddl
export releasepath:=$(TokenizerDir)\release

#Where Softing keeps their things
SOURCE_BINARY_DD:=$(releasepath)\$(manufacturer_ID)\$(DEVICE_TYPE)
TARGET_BINARY_DD:=$(PROJDIR)\target\appl\fbif\ddl\$(DEVICE_TYPE)
GW_DIR:=$(PROJDIR)\target\appl\fbif\script
DDLDIR:=$(PROJDIR)\target/appl/fbif/ddl

#MN files of interest: they need versioning info
export DDLSRC:=$(DDLDIR)/svi_positioner.ddl
DDLINC:=$(DDLDIR)/svi_ids.h

.PHONY : GenVFD tok
#Refer to GenVFD_FF.pdf on the files generated by the tool. There are too many
#of them to list as separate targets

DDL_root := $(PROJDIR)\target\appl\fbif
GenVFD: tok
    cd $(DDL_root)\script && genVFD_FF.exe ../inc ../src ../ddl/$(DEVICE_TYPE)\$(DEVICE_REV)$(DD_REV).sy5 \
    $(MAIN_SCRIPT) -unpacked_structures
	echo Timestamp of GenVFD step %TIME% %DATE% >$@

#------
#These commands offer ultimate freedom but may require
#recompiling the firmware to match DD's .sym, .sy5, symbols.txt
define DD_devel
    -$(MN_RM) -f -r $(SOURCE_BINARY_DD)
    -cmd /E /C mkdir $(SOURCE_BINARY_DD)
    $(MAKE) -f $(PROJDIR)\ffo.mak  _tok DDLSRC=$(DDLSRC) pretok=$(TARGET_BINARY_DD)\_tmptok-4 dst=$(TARGET_BINARY_DD) option="-a -DDD4 -4" basename=$(SOURCE_BINARY_DD)/$(DEVICE_REV)$(DD_REV)
    ren $(SOURCE_BINARY_DD)\symbols.txt symbols4.txt
    $(MAKE) -f $(PROJDIR)\ffo.mak _tok DDLSRC=$(DDLSRC) pretok=$(TARGET_BINARY_DD)\_tmptok dst=$(TARGET_BINARY_DD) option=-a basename=$(SOURCE_BINARY_DD)/$(DEVICE_REV)$(DD_REV)
endef

#These commands fail on incompatible .sym, .sy5, symbols.txt
#but are compatible with existing firmware
#It is possible for this build to fail on adding a brand new DD item.
#In this case, you need to inspect the differences in .ref manually
#and if they are only in new additions, manually update the reference files
define DD_only
    -$(MN_RM) -f -r $(SOURCE_BINARY_DD)
    -cmd /E /C mkdir $(SOURCE_BINARY_DD)
    $(MN_CP) $(TARGET_BINARY_DD)\symbols4.txt $(SOURCE_BINARY_DD)\symbols.txt
    attrib -R $(SOURCE_BINARY_DD)\symbols.txt
    $(MAKE) -f $(PROJDIR)\ffo.mak  _tok DDLSRC=$(DDLSRC) pretok=$(TARGET_BINARY_DD)\_tmptok-4 dst=$(TARGET_BINARY_DD) option="-DDD4 -4" basename=$(SOURCE_BINARY_DD)/$(DEVICE_REV)$(DD_REV)
    ren $(SOURCE_BINARY_DD)\symbols.txt symbols4.txt
    sort $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sym > $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sym.ref
    fc $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sym.ref $(TARGET_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sym.ref
    $(MN_CP) $(TARGET_BINARY_DD)\symbols.txt $(SOURCE_BINARY_DD)\symbols.txt
    attrib -R $(SOURCE_BINARY_DD)\symbols.txt
    $(MAKE) -f $(PROJDIR)\ffo.mak _tok DDLSRC=$(DDLSRC) pretok=$(TARGET_BINARY_DD)\_tmptok dst=$(TARGET_BINARY_DD) option=-a basename=$(SOURCE_BINARY_DD)/$(DEVICE_REV)$(DD_REV)
    sort $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sy5 > $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sy5.ref
    fc $(SOURCE_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sy5.ref $(TARGET_BINARY_DD)\$(DEVICE_REV)$(DD_REV).sy5.ref
endef

#We are doing maintenance on R2.1 without changing the firmware
DD_command = $(DD_only)

tok: $(DDLINC) $(GW_DIR)\ids.gw
    $(cmpcpy) $(includepath)\standard.sym $(releasepath)\standard.sym
    $(DD_command)
	echo Timestamp of tokenizer step %TIME% %DATE% >$@

$(DDLINC) : $(MAKEFILE_LIST)
    @echo MAKEFILE_LIST = $(MAKEFILE_LIST)
    echo MANUFACTURER      0x$(manufacturer_ID),>$@
    echo DEVICE_TYPE       0x$(DEVICE_TYPE),>>$@
    echo DEVICE_REVISION   $(DEVICE_REV),>>$@
    echo DD_REVISION       $(DD_REV)>>$@

Changeset:=$(if $(OFFver),$(OFFver),sandbox)

changeset.inc : $(MAKEFILE_LIST)
    @echo MAKEFILE_LIST = $(MAKEFILE_LIST)
    $(Hide)echo #MP Setstr Changeset="$(Changeset)" >$@

include ids.gwd

$(info ISUBDIR=$(ISUBDIR))

ids.gw ids.gwd: changeset.inc gw_rb_helper.u
	echo ISUBDIR=$(ISUBDIR)
    $(UNIMAL) -I. $(addprefix -I,$(ISUBDIR)) -O. -dids.wd_ gw_rb_helper.u
	@echo ids.gw : \>ids.tmp
	$(Hide)$(FIXDEP) ids.wd_>>ids.tmp
	del ids.gwd
	ren ids.tmp ids.gwd


$(GW_DIR)\ids.gw : ids.gw
    $(MN_CP) $< $@


force : ;